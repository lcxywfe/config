{
    "editor.fontSize": 16,
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.renderWhitespace": "all",
    "workbench.colorTheme": "Visual Studio Dark",
    // "workbench.list.openMode": "singleClick",
    "workbench.editor.enablePreview": false,
    // "files.trimTrailingWhitespace": true,
    "files.associations": {
        "*.cu": "cpp",
        "*.cuh": "cpp",
    },
    "editor.rulers": [
        80,
    ],
    "vim.incsearch": true,
    "vim.hlsearch": true,
    "vim.useCtrlKeys": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["H"],
            "after": ["^"]
        },
        {
            "before": ["L"],
            "after": ["$"]
        },
        {
            "before": ["U"],
            "after": ["<C-r>"]
        },

        {
            "before": ["<space>"],
            "after": ["/"]
        },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": ["H"],
            "after": ["^"]
        },
        {
            "before": ["L"],
            "after": ["$"]
        },
    ],
    "clang-format.executable": "/usr/bin/clang-format-10",
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "[c]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "workbench.startupEditor": "newUntitledFile",
    "window.zoomLevel": 1,
    "python.insidersChannel": "off",
    "python.formatting.provider": "autopep8",
    "python.formatting.autopep8Args": [
        "--max-line-length",
        "80",
        "--experimental"
    ],
    "python.linting.pylintArgs": [
        "--generated-members=numpy.* ,torch.*"
        ],
    "C_Cpp.updateChannel": "Insiders",
    "docker.host": "ssh://yao@192.168.10.147 ",
    "remote.SSH.connectTimeout": 200,
    "extensions.ignoreRecommendations": false,
    "workbench.editorAssociations": [
        {
            "viewType": "jupyter-notebook",
            "filenamePattern": "*.ipynb"
        }
    ],
    "terminal.integrated.shell.linux": "/bin/bash",
}